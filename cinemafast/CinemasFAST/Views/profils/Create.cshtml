@model CinemasFAST.Models.profil

@{ ViewBag.Title = "Create";

                if (Session["login"] != null && !Session["type"].Equals("admin"))
                {
                    Response.Redirect("~/Home/Index");
                } }

<div class="jumbotron">
    <h2>Créer un compte</h2>
</div>


@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

                <div class="form-horizontal row">
                    <div class="col-5">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.nom_complet, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.nom_complet, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.nom_complet, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control col-12", type = "password" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.courriel, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.courriel, new { htmlAttributes = new { @class = "form-control col-12" } })
                                @Html.ValidationMessageFor(model => model.courriel, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.DropDownList("type", new List<SelectListItem> { new SelectListItem { Text = "Administrateur", Value = "admin"},                                                                                                            
                                                           new SelectListItem { Text = "Utilisateur", Value = "utilisateur", Selected = true},
                                                           new SelectListItem { Text = "Programmateur", Value = "programmateur", Disabled = true}
                                                           }, new { @class = "form-control col-12" })

                                @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group mt-4 col-12">
                        <div class="col-md-offset-2 col-md-10">
                            @Html.ActionLink("Retour à l'accueil", "Index", null, new { @class = "btn btn-dark" })
                            <input type="submit" value="Enregistrer" class="btn btn-success" />
                        </div>
                    </div>
                </div>}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
